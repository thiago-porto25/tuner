// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TunerPermissionsHandler matches the snapshot 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  />
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      accessibilityLiveRegion="polite"
      accessibilityViewIsModal={true}
      collapsable={false}
      onAccessibilityEscape={[Function]}
      pointerEvents="auto"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      testID="Tuner-ErrorPermissionModal"
    >
      <View
        accessibilityLabel="tunerScreen.permissions.error.overlayLabel"
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        importantForAccessibility="no"
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "rgba(50, 47, 55, 0.4)",
            "flex": 1,
            "opacity": 0,
          }
        }
        testID="Tuner-ErrorPermissionModal-backdrop"
      />
      <View
        pointerEvents="box-none"
        style={
          [
            {
              "bottom": 0,
              "justifyContent": "center",
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            {
              "marginBottom": 0,
              "marginTop": 0,
            },
            undefined,
          ]
        }
        testID="Tuner-ErrorPermissionModal-wrapper"
      >
        <View
          collapsable={false}
          style={
            {
              "backgroundColor": "transparent",
              "bottom": 0,
              "left": 0,
              "opacity": 0,
              "position": "absolute",
              "right": 0,
              "shadowColor": "#000",
              "shadowOffset": {
                "height": 1,
                "width": 0,
              },
              "shadowOpacity": 0.15,
              "shadowRadius": 3,
            }
          }
          testID="Tuner-ErrorPermissionModal-surface-outer-layer"
        >
          <View
            collapsable={false}
            style={
              {
                "backgroundColor": "transparent",
                "flex": undefined,
                "justifyContent": "center",
                "shadowColor": "#000",
                "shadowOffset": {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.3,
                "shadowRadius": 1,
              }
            }
            testID="Tuner-ErrorPermissionModal-surface"
          >
            <View
              style={
                {
                  "backgroundColor": "rgba(255, 251, 254, 1)",
                  "borderTopLeftRadius": 12,
                  "borderTopRightRadius": 12,
                  "justifyContent": "space-between",
                  "minHeight": 256,
                  "paddingBottom": 24,
                  "paddingLeft": 24,
                  "paddingRight": 24,
                  "paddingTop": 24,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  {
                    "marginBottom": 24,
                    "marginTop": 16,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "textAlign": "left",
                      },
                      {
                        "color": "rgba(28, 27, 31, 1)",
                        "writingDirection": "ltr",
                      },
                      [
                        {
                          "fontFamily": "Inter-Regular",
                          "fontSize": 22,
                          "fontWeight": "400",
                          "letterSpacing": 0,
                          "lineHeight": 28,
                        },
                        {
                          "fontFamily": "Inter-Bold",
                          "marginBottom": 8,
                        },
                      ],
                    ]
                  }
                >
                  tunerScreen.permissions.error.title
                </Text>
                <View
                  style={{}}
                >
                  <Text
                    style={
                      [
                        {
                          "textAlign": "left",
                        },
                        {
                          "color": "rgba(28, 27, 31, 1)",
                          "fontFamily": "Inter-Regular",
                          "fontWeight": "400",
                          "letterSpacing": 0,
                        },
                        {
                          "writingDirection": "ltr",
                        },
                        {},
                      ]
                    }
                  >
                    tunerScreen.permissions.error.description
                  </Text>
                </View>
              </View>
              <View
                style={
                  {
                    "gap": 8,
                  }
                }
              >
                <View
                  collapsable={false}
                  style={
                    {
                      "backgroundColor": "#f48225",
                      "borderRadius": 20,
                      "shadowColor": "#000",
                      "shadowOffset": {
                        "height": 0,
                        "width": 0,
                      },
                      "shadowOpacity": 0,
                      "shadowRadius": 0,
                    }
                  }
                  testID="Tuner-ErrorPermissionModal-RetryButton-container-outer-layer"
                >
                  <View
                    collapsable={false}
                    style={
                      {
                        "backgroundColor": "#f48225",
                        "borderColor": "transparent",
                        "borderRadius": 20,
                        "borderStyle": "solid",
                        "borderWidth": 0,
                        "flex": undefined,
                        "minWidth": 64,
                        "shadowColor": "#000",
                        "shadowOffset": {
                          "height": 0,
                          "width": 0,
                        },
                        "shadowOpacity": 0,
                        "shadowRadius": 0,
                      }
                    }
                    testID="Tuner-ErrorPermissionModal-RetryButton-container"
                  >
                    <View
                      accessibilityRole="button"
                      accessibilityState={
                        {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": false,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        [
                          {
                            "overflow": "hidden",
                          },
                          {
                            "borderRadius": 20,
                          },
                        ]
                      }
                      testID="Tuner-ErrorPermissionModal-RetryButton"
                    >
                      <View
                        style={
                          [
                            {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "justifyContent": "center",
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          numberOfLines={1}
                          selectable={false}
                          style={
                            [
                              {
                                "textAlign": "left",
                              },
                              {
                                "color": "rgba(28, 27, 31, 1)",
                                "writingDirection": "ltr",
                              },
                              [
                                {
                                  "fontFamily": "Inter-Medium",
                                  "fontSize": 14,
                                  "fontWeight": "400",
                                  "letterSpacing": 0.1,
                                  "lineHeight": 20,
                                },
                                [
                                  {
                                    "marginHorizontal": 16,
                                    "marginVertical": 9,
                                    "textAlign": "center",
                                  },
                                  false,
                                  {
                                    "marginHorizontal": 24,
                                    "marginVertical": 10,
                                  },
                                  undefined,
                                  false,
                                  {
                                    "color": "rgba(255, 255, 255, 1)",
                                    "fontFamily": "Inter-Medium",
                                    "fontSize": 14,
                                    "fontWeight": "400",
                                    "letterSpacing": 0.1,
                                    "lineHeight": 20,
                                  },
                                  undefined,
                                ],
                              ],
                            ]
                          }
                          testID="Tuner-ErrorPermissionModal-RetryButton-text"
                        >
                          tunerScreen.permissions.error.retryButtonLabel
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</RNCSafeAreaProvider>
`;
